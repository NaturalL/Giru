package com.biasee.giru.event.web;


import com.biasee.giru.event.client.events.ErrorEvent;
import com.biasee.giru.event.core.service.AlertService;
import com.biasee.giru.event.core.util.EventUtils;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;


@SpringBootTest
public class EventApplicationTest {
    @Autowired
    private AlertService alertService;

    @Test
    public void testAlert() {
        String json = "{\"appId\":\"test\",\"ip\":\"192.168.20.21\",\"name\":\"error-log\",\"type\":\"ERROR\",\"labels\":{\"level\":\"ERROR\",\"logger\":\"error\",\"firstStack\":\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\",\"stackTrace\":\"java.lang.IllegalStateException: Cipher not initialized\\n\\tjavax.crypto.Cipher.checkCipherState(Cipher.java:1750)\\n\\tjavax.crypto.Cipher.doFinal(Cipher.java:2157)\\n\\tcom.biasee.sms.channel.external.common.util.AesForChanIdUtil.decryptFromHex(AesForChanIdUtil.java:90)\\n\\tcom.biasee.sms.channel.external.callback.web.report.vsms.ZJYDVsmsController.callback(ZJYDVsmsController.java:43)\\n\\tsun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)\\n\\tsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tjava.lang.reflect.Method.invoke(Method.java:498)\\n\\torg.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\\n\\torg.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\\n\\torg.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\\n\\torg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)\\n\\torg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)\\n\\torg.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\torg.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\\n\\torg.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\\n\\torg.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)\\n\\torg.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)\\n\\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:661)\\n\\torg.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)\\n\\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:742)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\torg.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:246)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\torg.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\torg.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\torg.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\torg.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\torg.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)\\n\\torg.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)\\n\\torg.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\t... 22 more\\n\",\"rootStack\":\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\"},\"time\":1596017109802,\"error\":\"POST | //callback/vsms/zjyd/f6c463a\\n31c4ecd4bb0e179b9e7924ac1 | {}\"}";
        ErrorEvent errorEvent = EventUtils.fromJson(json, ErrorEvent.class);
        alertService.newErrorAlert(errorEvent);
        EventUtils.sleep(2000);
    }

}