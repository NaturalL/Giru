package com.biasee.giru.event.client.api;

import com.biasee.giru.event.client.EventClientUtil;
import org.junit.Test;


public class DefaultEventClientTest {

    @Test
    public void testPost() {
        String json = "{\"appId\":\"demo\",\"ip\":\"10.178.102.40\",\"name\":\"error-log\",\"type\":\"ERROR\",\"labels\":{\"exception\":\"java.lang.IllegalArgumentException\",\"level\":\"ERROR\",\"logger\":\"com.example.demo.domain.customer.CustomerController\",\"firstStack\":\"com.example.demo.domain.customer.CustomerController.error(CustomerController.java:28)\",\"stackTrace\":\"java.lang.IllegalArgumentException: error\\n\\tcom.example.demo.domain.customer.CustomerController.error(CustomerController.java:28)\\n\\tsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tjava.lang.reflect.Method.invoke(Method.java:498)\\n\\torg.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)\\n\\torg.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)\\n\\torg.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\\n\\torg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\n\\torg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\n\\torg.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\n\\torg.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)\\n\\torg.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\n\\torg.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\n\\torg.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\\n\\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:655)\\n\\torg.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\n\\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)\\n\\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)\\n\\torg.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)\\n\\torg.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)\\n\\torg.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\n\\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\\n\\torg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)\\n\\torg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)\\n\\torg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\\n\\torg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\n\\torg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\\n\\torg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\\n\\torg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\n\\torg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\n\\torg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\\n\\torg.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)\\n\\torg.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\n\\torg.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\\n\\torg.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)\\n\\torg.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\torg.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\n\\t... 1 more\\n\",\"rootStack\":\"com.example.demo.domain.customer.CustomerController.error(CustomerController.java:28)\"},\"time\":1632294124662,\"error\":\"new异常\"}";

        try {
            DefaultEventClient eventClient = new DefaultEventClient("http://localhost:8092");
            for (int i = 0; i < 10; i++) {
                eventClient.report("ERROR", json);
                EventClientUtil.sleep(10);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
